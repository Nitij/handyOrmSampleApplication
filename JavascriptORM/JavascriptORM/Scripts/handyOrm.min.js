; var ModelDef = null; (function () { var e = function () { this._modelName = null; this._serviceName = null; this._methodName = null; this._columns = []; this._lastOperation = null; this.results = null; return this }; e.prototype = { clearFields: function (e) { var t = 0; var n = null; for (; t < e.length; t++) { n = $("*[model-name = '" + this._modelName + "']*[model-column = '" + e[t] + "']"); $(n[0]).val("") } return this }, columnElementId: function (e) { var t = null; if (jQuery.inArray(e, this._columns) !== -1) { t = $("*[model-name = '" + this._modelName + "']*[model-column = '" + e + "']") } if (t === null || t === undefined) { return t } else { return t[0].id } }, lastOperation: function () { return this._lastOperation }, modelName: function (e) { this._modelName = e; return this }, operation: function (e, t, r) { var i = []; var s = 0; var o = null; var u = null; var a = this.setResults; this._lastOperation = e; if (r === null || r === undefined) r = []; if (t === null || t === undefined) t = []; for (; s < t.length; s++) { o = $("*[model-name = '" + this._modelName + "']*[model-column = '" + t[s] + "']"); i.push({ ColName: t[s], ColValue: $(o[0]).val() }) } for (s = 0; s < r.length; s++) { i.push({ ColName: r[s].col, ColValue: r[s].val }) } u = "{'operationType':'" + e + "','values':'" + JSON.stringify(i) + "'}"; var f = new n(this._serviceName, this._methodName, u); return f.callService() }, serviceName: function (e) { this._serviceName = e; return this }, methodName: function (e) { this._methodName = e; return this }, columns: function (e) { this._columns = e; return this } }; var t = function () { this.resolved = null; this.rejected = null }; t.prototype = { then: function (e, t) { this.resolved = e; this.rejected = t } }; var n = function (e, t, n) { this._serviceName = e; this._methodName = t; this._methodParams = n; return this }; n.prototype = { callService: function () { var e = new t; return $.ajax({ type: "POST", url: "/" + this._serviceName + ".asmx/" + this._methodName, data: this._methodParams, contentType: "application/json; charset=utf-8", dataType: "json" }) } }; ModelDef = e })()